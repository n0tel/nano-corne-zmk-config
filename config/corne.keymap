#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&sk {
    release-after-ms = <3000>;
};

/ {
        combos {
                compatible = "zmk,combos";

                combo_bspc {
                        timeout-ms = <50>;
                        key-positions = <15 20>;
                        layers = <0>;
                        bindings = <&kp BSPC>;
                };
                combo_ret {
                        timeout-ms = <50>;
                        key-positions = <16 19>;
                        layers = <0>;
                        bindings = <&kp RET>;
                };
                combo_q {
                        timeout-ms = <50>;
                        key-positions = <13 22>;
                        layers = <0>;
                        bindings = <&kp Q>;
                };
                combo_p {
                        timeout-ms = <50>;
                        key-positions = <14 21>;
                        layers = <0>;
                        bindings = <&kp P>;
                };
        };
};

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";

                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };
};

/ {      
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
                        bindings = <
&none   &kp Q     &kp W   &kp E   &kp R   &kp T           &kp Y  &kp U   &kp I     &kp O   &kp P    &none
&none   &kp A     &kp S   &kp D   &kp F   &kp G           &kp H   &kp J   &kp K     &kp L   &kp SEMI &none
&none   &kp Z     &kp X   &kp C   &kp V   &kp B           &kp N   &kp M   &kp COMMA &kp DOT &kp FSLH &none
          &mt LCTRL ESC   &kp SPACE       &mo 1           &mo 2   &kp LSHFT         &mt LWIN TAB
                        >;
                };

                lower_layer {
                        label = "NUMBER";
                        bindings = <
&none   &kp N1  &kp N2    &kp N3    &kp N4    &kp N5         &kp N6  &kp N7   &kp N8   &kp N9    &kp N0    &none
&none   &none   &kp GRAVE &kp MINUS &kp EQUAL &kp C_VOL_UP   &none   &kp LBKT &kp SQT  &kp RBKT  &kp PSCRN &none
&none   &none  &none     &none     &none     &kp C_VOL_DN   &none   &kp INS  &kp HOME &kp PG_UP &kp PIPE  &none
                          &trans    &none     &trans         &trans  &trans   &trans
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
                        bindings = <
&none   &kp EXCL &kp AT      &kp HASH  &kp DLLR &kp PRCNT    &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR      &none
&none   &none    &kp TILDE   &kp UNDER &kp PLUS &none        &none     &kp LBRC &kp DQT   &kp RBRC  &kp LC(PSCRN) &none
&none   &none    &none       &none     &none    &none        &none    &kp DEL  &kp END   &kp PG_DN &kp BSLH      &none
                    	     &none     &kp LALT &trans       &trans    &trans   &trans
                        >;
                };

                config_layer {
                        label = "CONFIG";
                        bindings = <
&none   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5     &kp F6  &kp F7   &kp F8   &kp F9 &kp F10   &none
&none   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none        &none      &kp F11 &kp LEFT &kp DOWN &kp UP &kp RIGHT &none
&none   &bt BT_CLR   &none        &none        &none        &none      &kp F12 &none    &none    &none  &none     &none
                          	  &trans       &none        &trans     &trans  &trans   &trans
                        >;
                };
        };
};
